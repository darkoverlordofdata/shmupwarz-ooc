use sdl2
import math
import sdl2/[Core, Event, Image]
import structs/ArrayList
import structs/LinkedList
import structs/Stack
import entitas/Entity
import entitas/Exceptions
import entitas/Group
import entitas/Interfaces
import entitas/Matcher
import entitas/World
import entitas/events/EntityChanged
import entitas/events/EntityReleased
import entitas/events/GroupChanged
import entitas/events/GroupsChanged
import entitas/events/GroupUpdated
import entitas/events/WorldChanged
import entitas/events/ComponentReplaced
import Components
import Entities
import Game

{{ name }} : class implements {% for iface in interfaces %} {{ iface }}, {% endfor %}ISystem {
    game : Game
    world: World

    init: func(=game)


{% for iface in interfaces %}
{% case iface %}
{% when "IExecuteSystem" %}    execute: func(){}
{% when "IInitializeSystem" %}    initialize: func(){}
{% when "ISetWorld" %}    setWorld: func(=world){}
{% endcase %}
{% endfor %}
}